<!-- No2ControlViewAutomaticPanel.xaml - ViphApp (C) motion phantom application.
 * Copyright (C) 2018-2020 by Stefan Grimm
 *
 * This is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public License
 * along with the ViphApp software.  If not, see
 *<http://www.gnu.org/licenses/> .
 -->

<UserControl x:Class="ViphApp.No2.UI.Views.No2ControlViewAutomaticPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:qc="clr-namespace:QuickConverter;assembly=QuickConverter"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="200">

  <StackPanel Name="No2Controls">
    <Label Foreground="White" FontWeight="Bold" Content="Program"/>
    <ComboBox ItemsSource="{Binding Path=Programs, Mode=OneWay}"    
              SelectedItem="{Binding Path=SelectedProgram, Mode=TwoWay}"
              IsEnabled="{qc:Binding '$P==False', P={Binding IsRunning}}" />

    <TextBlock Margin="0,10" 
               Width="{Binding ActualWidth, ElementName=No2Controls}"
               Foreground="White" 
               TextWrapping="Wrap"
               FontStyle="Italic"
               Text="{Binding SelectedProgramDescription, Mode=OneWay}"/>

    <ToggleButton Name="runbutton"
                  Content="{Binding}" 
                  Background="Transparent"
                  Width="80"
                  Height="30"
                  IsChecked="{Binding IsRunning}">
      <ToggleButton.Style>
        <Style TargetType="{x:Type ToggleButton}">
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="false">
              <Setter Property="ContentTemplate" Value="{StaticResource runTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsRunning}" Value="true">
              <Setter Property="ContentTemplate" Value="{StaticResource stopTemplate}" />
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </ToggleButton.Style>
    </ToggleButton>
    
  </StackPanel>
</UserControl>
