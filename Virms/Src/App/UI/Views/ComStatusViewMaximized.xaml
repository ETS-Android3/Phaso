<!-- ComStatusViewMaximized.xaml - ViphApp (C) motion phantom application.
 * Copyright (C) 2018-2020 by Stefan Grimm
 *
 * This is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.

 * You should have received a copy of the GNU Lesser General Public License
 * along with the ViphApp software.  If not, see
 *<http://www.gnu.org/licenses/> .
 -->
  
 <UserControl x:Class="ViphApp.App.UI.Views.ComStatusViewMaximized"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:qc="clr-namespace:QuickConverter;assembly=QuickConverter"
             mc:Ignorable="d"
             d:DesignHeight="400" d:DesignWidth="800">

  <StackPanel>
    
    <StackPanel Height="30" Orientation="Horizontal">
      <Button Width="30" 
              Background="Transparent"
              BorderBrush="Transparent"   
              Command="{Binding Status.DoShowStatusMaximized}">
        <Image Source="pack://application:,,,/ViphApp.Common;component/UI/Icons/ArrowDown.png" />
      </Button>
      <Label Foreground="White" FontWeight="Bold" Content="Port:"></Label>
      <ComboBox Width="100" 
                ItemsSource="{Binding Status.SerialPorts, Mode=OneWay}"    
                SelectedItem="{Binding Status.SelectedSerialPort, Mode=TwoWay}"
                IsEnabled="{qc:Binding '$P==False', P={Binding Status.IsConnected}}" />

      <Button Content="Refresh"
              Command="{Binding Status.DoRefreshSerialPorts}"
              IsEnabled="{qc:Binding '$P==False', P={Binding Status.IsConnected}}" />

      <ToggleButton Content="{Binding}" 
                  Background="{Binding}"
                  IsChecked="{Binding Status.IsConnected}">
        <ToggleButton.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Style.Triggers>
              <DataTrigger Binding="{Binding Status.IsConnected}" Value="false">
                <Setter Property="ContentTemplate" Value="{StaticResource connectTemplate}" />
              </DataTrigger>
              <DataTrigger Binding="{Binding Status.IsConnected}" Value="true">
                <Setter Property="ContentTemplate" Value="{StaticResource disconnectTemplate}" />
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </ToggleButton.Style>
      </ToggleButton>
      
    </StackPanel>

    <StackPanel Margin="0,10" Orientation="Horizontal">
      <Label Foreground="White" FontWeight="Bold" Content="Command Register:"></Label>
      <TextBox Width="40" 
               Foreground="White" 
               Background="Transparent"
               FontWeight="Bold"
               Text="{Binding Status.CommandRegister}"/>
      <Button Content="Set" 
              Background="Transparent" Foreground="White" FontWeight="Bold"
              Command="{Binding Status.DoSetCommandRegister}" />
    </StackPanel>

    <ScrollViewer Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Border}},Path=ActualHeight}">
      <TextBlock Margin="4" Foreground="LightGreen" Background="#FF505050" TextWrapping="Wrap" Text="{Binding Path=Status.LogOutput, Mode=OneWay}"/>
    </ScrollViewer>

  </StackPanel>
</UserControl>
